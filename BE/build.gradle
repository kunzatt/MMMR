plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

// commons-logging 의존성 제거
configurations.all {
	exclude group: 'commons-logging', module: 'commons-logging'
}

// QueryDSL Q클래스 생성 경로 설정
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}

dependencies {
	// Spring Boot 기본
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.3.RELEASE'
	testImplementation 'org.springframework.security:spring-security-test:6.4.2'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test:6.4.2'
	testImplementation 'org.mockito:mockito-inline:3.12.4'
	testImplementation 'com.h2database:h2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test에서 lombok 사용을 위한 의존성 추가
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Development tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// Logging
	implementation 'ch.qos.logback:logback-classic'
	implementation 'ch.qos.logback:logback-core'

	// 캐싱처리
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// env 설정
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	// JSON
	implementation 'org.json:json:20231013'

	// jsoup
	implementation 'org.jsoup:jsoup:1.18.3'

	// Spring Batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	// CSV 파일 처리를 위한 라이브러리
	implementation 'com.opencsv:opencsv:5.9'

	// Excel 처리를 위한 Apache POI
	implementation 'org.apache.poi:poi:4.1.2'
	implementation 'org.apache.poi:poi-ooxml:4.1.2'

	// 대용량 Excel 처리를 위한 의존성
	implementation 'com.monitorjbl:xlsx-streamer:2.2.0'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.3.RELEASE'
	testImplementation 'org.springframework.security:spring-security-test:6.4.2'

	// Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// QueryDSL 의존성
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
		showStandardStreams = true
	}
}